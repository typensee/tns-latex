% == TOOLS == %

\ExplSyntaxOn

% -- "CONTEXT" AGNOSTIC DSL (L3 version) -- %

% :: RESCAN TRICK :: %

% Source.
%   + https://tex.stackexchange.com/a/706773/6880

\tl_new:N   \g_tns_functab_semicolon_tl
\tl_gset:Nn \g_tns_functab_semicolon_tl { ; }

\tl_new:N   \g_tns_functab_colon_tl
\tl_gset:Nn \g_tns_functab_colon_tl { : }

\cs_generate_variant:Nn \seq_set_split:Nnn { NV }

\AtBeginDocument {
  \tl_gset_rescan:NnV \g_tns_functab_semicolon_tl
                      {}
                      \g_tns_functab_semicolon_tl

  \tl_gset_rescan:NnV \g_tns_functab_colon_tl
                      {}
                      \g_tns_functab_colon_tl
}


% :: MESSAGES :: %

\msg_set:nnnn { tnscore } { ctxt-DSL-no-context }
  { missing ~ context. ~ See ~ the ~ line ~ >>> ~ #1 }
  { \msg_see_documentation_text:n { tnsfunctab } }


\msg_set:nnnn { tnscore } { ctxt-DSL-too-much-equal-signs  }
  { too ~ much ~ equal ~ signs ~ used. ~ See ~ the ~ line ~ >>> ~ #1 }
  { \msg_see_documentation_text:n { tnsfunctab } }


\msg_set:nnnn { tnscore } { ctxt-DSL-too-much-colons  }
  { too ~ much ~ colons ~ used. ~ See ~ the ~ line ~ >>> ~ #1 }
  { \msg_see_documentation_text:n { tnsfunctab } }


% :: AGNOSTIC PARSERS :: %

% The following local constant are used by the parser.
\int_new:N \l_tns_core_all_ctxts_nb_line_int
\seq_new:N \l_tns_core_all_ctxts_seq
\tl_new:N  \l_tns_core_current_ctxt_tl
\tl_new:N  \l_tns_core_current_label_tl
\tl_new:N  \l_tns_core_current_value_tl


%%%
% prototype::
%     #1 : the ID used to name the different variables storing
%          the contexts found.
%     #2 : the user's code to be parsed.
%
%     :action: XXX
%
%
% warning::
%     XXXX
%%%
\cs_new:Npn \tns_core_DSL_ctxt_parser:nn #1#2 {
% "External" flat variables.
  \seq_gclear_new:c { #1::contexts }
  \seq_gclear_new:c { #1::labels }
  \seq_gclear_new:c { #1::contents }

% Line by line parsing, where the lines are semi-colon separated.
% Empty lines are ignored.
  \seq_set_split:NVn \l_tns_core_all_ctxts_seq
                     \g_tns_functab_semicolon_tl
                     { #2 }

  \int_zero:N \l_tns_core_all_ctxts_nb_line_int

% Maping over each context found.
  \tl_set:Nn \l_tns_core_current_ctxt_tl { :-: ctxt-dsl-missing-context :-: }

  \seq_map_inline:Nn \l_tns_core_all_ctxts_seq {
    \int_incr:N \l_tns_core_all_ctxts_nb_line_int

% Get the context name and its content.
    \seq_set_split:Nnn \l_tmpa_seq { = } { ##1 }

    \int_set:Nn \l_tmpa_int {\seq_count:N \l_tmpa_seq}

    \int_case:nnF { \int_use:N \l_tmpa_int } {
% Last context must be used.
      { 1 } {
% We must have a last context.
        \tl_if_eq:NnT \l_tns_core_current_ctxt_tl { :-: ctxt-dsl-missing-context :-: } {
          \msg_error:nnn { tnscore }
                         { ctxt-DSL-no-context }
                         { ##1 }
        }
      }
% A new context.
      { 2 } {
        \seq_pop_left:NN \l_tmpa_seq \l_tns_core_current_ctxt_tl
      }
% Too much equal signs found.
    }{
      \msg_error:nnn { tnscore }
                     { ctxt-DSL-too-much-equal-signs}
                     { ##1 }
    }

% Get the optional label and its content.
    \seq_pop_left:NN \l_tmpa_seq \l_tmpa_tl

    \seq_set_split:NVV \l_tmpa_seq
                       \g_tns_functab_colon_tl
                       \l_tmpa_tl

    \int_set:Nn \l_tmpa_int {\seq_count:N \l_tmpa_seq}

    \int_case:nnF { \int_use:N \l_tmpa_int } {
% No label used.
      { 1 } {
        \tl_set:Nn \l_tns_core_current_label_tl { }
      }
% One label used.
      { 2 } {
        \seq_pop_left:NN \l_tmpa_seq \l_tns_core_current_label_tl
      }
% Too much colons found.
    }{
      \msg_error:nnn { tnscore }
                     { ctxt-DSL-too-much-colons}
                     { ##1 }
    }

% Content.
    \seq_pop_left:NN \l_tmpa_seq \l_tns_core_current_value_tl

% Update the "external" variables.
    \seq_gput_right:cV { #1::contexts } \l_tns_core_current_ctxt_tl
    \seq_gput_right:cV { #1::labels }   \l_tns_core_current_label_tl
    \seq_gput_right:cV { #1::contents } \l_tns_core_current_label_tl
  }
}

\ExplSyntaxOff
