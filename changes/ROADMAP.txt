=========================
typensee-latex (monorepo) - ROADMAP
=========================

This file is a roadmap, in the short term.


-----------
ALWAYS DONE
-----------

    1) Use of a Python script to know if a name (macro/environment/...)
       is already used by a TeX Live project.


    2) New features are always tested at least with l3build.

        + Tests build from the docs: use of meta comments because
          some tests can need some specific settings.

        + Home-made tests can be added if necessary.


    3) tnscore

        + Abstraction from the last changes must be added as soon
          as possible!


    4) Semantics: make it possible to create YAML-style files giving
       information on the use of a macro for tools that will just do
       pattern matching in the TEX file.

       For example, \funcdef{f, x, \RR, x^2, \RR} could give :

       yaml::
         - "\funcdef{f, x, \RR, x^2, \RR}":
         - What to add next ???


----------
NEXT STEPS
----------

    1) Function tab.

        + 2D-values
        + 3D-values
        + signs
        + variations


    2) stepcalc ---> seqcalc (sequential calculus) & basic logic

        + \then ??? instead of \implies
          and
          \when ??? instead of \becauseof

        + New easy-to-use syntax, regarding the style:
            \nextstep   % Nothing to say
          or
            \nextstep[top to bottom]<bottom to top>
          or
            \nextstep[top to bottom ALONE]
          or
            \nextstep<bottom to top ALONE>
          or
            \nextstep{double side}
          (in a double-side case, the use of the first options will
          not be allowed).

        + Macro to facilitate the construction of specialized stepcalc
          environments like an iff environment, or an evaluation one
          for example. Use of expl3 template!

        + customisable colours: arrow and text, so we can have a black arrow and coloured text linked to coloured calculation.


    3) Interval in a dedicated package

        + Writing: coma separated value \intervalO{a, b} ...

        + Drawing: drawing on different levels, and visual tools for union and intersection
