this::
    date = 2023-10-01


=====================================
Langues pour les \macros et les \envs
=====================================

Prenons le cas du \pack \bdoc dont le code \src à la date du \bdocdate contient le dossier de \dev path::``main`` suivant.

dirtree::
    + main
        + locale
            * french.sty
            + french
                * macros.txt
                * sentences.txt


warning::
    Dans le dossier de \dev du code \src, les trads sont \tjrs à placer dans un sous-dossier nommé path::``locale``.


De façon automatisée, un dossier path::``contribute/api/locale/french/main``, comme ci-dessous, contiendra la dernière version des \trads utiles au fonctionnement du \pack \bdoc.

dirtree::
    + tnsfictive
        + contribute
            + api
                + locale
                    + french
                        + main
                            * macros.txt
                            * sentences.txt
            + [...]
        + [...]


Il ne reste plus qu'à un traducteur allemand, par exemple, à créer un dossier path::``german`` avec le même contenu que celui du dossier path::``french``
((
    Le choix de \bdoc est de reprendre les noms de langue utilisables avec le \pack ``babel``, et non de suivre la \isolangnorme.
)).
Le processus de \trad des mots et des phrases "fixes" est simple comme le montre le contenu du fichier path::``sentences.txt`` donné ci-après.

verb::
    ---
    path = ?/coding/lang-api/example/sentences.txt
    ---


Pour les phrases "paramétrables", ceci se fait comme suit où les lignes commentées via ``//`` en début de ligne indiquent la signification de chacun des \params ``#1``, ``#2``, ... \etc.

verb::
    ---
    path = ?/coding/lang-api/example/macros.txt
    ---


warning::
    Les \ids avant les signes ``=`` sont de la responsabilité du codeur et non de celle du traducteur.
